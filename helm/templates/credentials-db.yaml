---
# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  name: credentials-db
spec:
  ports:
  - port: {{.Values.credentials_db.port.mysql}}
  # [podname].credentials-db.<namespace>.svc.cluster.local
  clusterIP: None
  selector:
    app: credentials-db
---
# Stateful set providing a MySQL database to store users in
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: credentials-db
spec:
  replicas: 1
  serviceName: credentials-db
  template:
    metadata:
      labels:
        app: credentials-db
      annotations:
    spec:
      containers:
      - name: mysql
        image: '{{.Values.credentials_db.image}}:{{.Values.credentials_db.tag}}'
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.Values.credentials_db.password_secret.name}}
              key: {{.Values.credentials_db.password_secret.key}}
        - name: MYSQL_DATABASE
          value: {{.Values.credentials_db.db_name}}
        ports:
          - containerPort: {{.Values.credentials_db.port.mysql}}
        resources:
          requests:
            cpu: 100m
            memory: 500Mi
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - echo "exit" | mysql --user=$CAS_SQL_USER --password=$MYSQL_ROOT_PASSWORD $MYSQL_DATABASE
        volumeMounts:
        - name: sql-data
          mountPath: /var/lib/mysql
          readOnly: false
  volumeClaimTemplates:
  - metadata:
      name: sql-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 2Gi
      storageClassName: {{.Values.credentials_db.storage_class_name}}


